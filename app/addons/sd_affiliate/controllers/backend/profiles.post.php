<?php
 use Tygh\Registry; use Tygh\Enum\UserStatuses; use Tygh\Enum\AffiliateUserTypes; use Tygh\Settings; defined('BOOTSTRAP') or die('Access denied'); if ($_SERVER['REQUEST_METHOD'] == 'POST') { if ($mode == 'update') { if (!empty($_REQUEST['user_data']['user_type']) && $_REQUEST['user_data']['user_type'] == AffiliateUserTypes::PARTNER ) { if (empty($_REQUEST['update_data'])) { return; } if (!empty($_REQUEST['update_data']['approved']) && $_REQUEST['update_data']['approved'] == UserStatuses::NOAPPROVED || $_REQUEST['update_data']['approved'] == UserStatuses::DECLINED ) { $_REQUEST['update_data']['plan_id'] = 0; } fn_update_partner_profile($_REQUEST['user_id'], $_REQUEST['update_data']); } else { fn_delete_partner_profile($_REQUEST['user_id']); } return; } } if ($mode == 'update') { if (!empty($_REQUEST['user_type']) && $_REQUEST['user_type'] == AffiliateUserTypes::PARTNER) { $navigation = Registry::get('navigation.tabs'); $navigation['affiliate_information'] = [ 'title' => __('affiliate_information'), 'js' => true, ]; $navigation['affiliate_tree'] = [ 'title' => __('affiliate_tree'), 'js' => true, ]; if (isset($navigation['usergroups'])) { $navigation['usergroups'] = [ 'title' => __('affiliate_user_group_title'), 'js' => true, ]; } else { $navigation['user_affiliate_group'] = [ 'title' => __('affiliate_user_group_title'), 'js' => true, ]; } Registry::set('navigation.tabs', $navigation); $partner_data = fn_get_partner_data($_REQUEST['user_id']); if (empty($partner_data)) { return [CONTROLLER_STATUS_NO_PAGE]; } $partner_data['total_payouts'] = db_get_field( 'SELECT SUM(amount)' . ' FROM ?:affiliate_payouts' . ' WHERE partner_id = ?i', $_REQUEST['user_id'] ); list($last_payouts, $max_amount) = fn_sd_affiliate_calculate_last_periods_commissions($_REQUEST['user_id']); $partners = fn_get_partners_tree($_REQUEST['user_id']); $plan_list_params = !isset($partner_data['company_id']) ? [] : ['company_id' => $partner_data['company_id']]; $usergroup_for_affiliate['usergroup_id'] = (int) Settings::instance()->getValue('affiliates_usergroup', 'sd_affiliate', 0); if (!empty($usergroup_for_affiliate['usergroup_id'])) { if (isset($navigation['usergroups'])) { $usergroup_for_affiliate = fn_get_usergroups(['usergroup_id' => $usergroup_for_affiliate['usergroup_id']]); } else { $usergroup_for_affiliate['usergroup'] = fn_get_usergroup_name($usergroup_for_affiliate['usergroup_id']); } } Tygh::$app['view']->assign([ 'total_commissions' => fn_sd_affiliate_get_total_commissions($_REQUEST['user_id']), 'max_amount' => $max_amount, 'last_payouts' => $last_payouts, 'partner' => $partner_data, 'partners' => $partners, 'affiliate_plans' => fn_sd_affiliate_get_plans_list(DESCR_SL, $plan_list_params), 'all_affiliates' => fn_sd_affiliate_get_affiliate_list($_REQUEST['user_id']), ]); if (isset($navigation['usergroups'], $usergroup_for_affiliate)) { $chosed_usergroup = reset($usergroup_for_affiliate); Tygh::$app['view']->assign('usergroups', $chosed_usergroup ? $usergroup_for_affiliate : false); } else { Tygh::$app['view']->assign('usergroup_for_affiliate', $usergroup_for_affiliate); } $use_multiple_promotions = Registry::get("addons.sd_affiliate.use_multiple_promotions"); if ($use_multiple_promotions == 'N') { Tygh::$app['view']->assign('coupon_code_list', fn_sd_affiliate_get_coupon_code_list($_REQUEST['user_id'])); } } }