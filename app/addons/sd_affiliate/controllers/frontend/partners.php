<?php
 use Tygh\Enum\AffiliateUserTypes; defined('BOOTSTRAP') or die('Access denied'); if ($_SERVER['REQUEST_METHOD'] == 'POST') { return; } if (!empty($auth['user_id'])) { fn_add_breadcrumb(__('affiliates_partnership'), 'affiliate_plans.list'); $partner_data = fn_get_partner_data($auth['user_id']); if (!empty($partner_data)) { $partner_data['total_payouts'] = db_get_field( 'SELECT SUM(amount) FROM ?:affiliate_payouts WHERE partner_id = ?i', $auth['user_id'] ); list($last_payouts, $max_amount) = fn_sd_affiliate_calculate_last_periods_commissions($auth['user_id']); $partners = [$auth['user_id'] => fn_get_partners_tree_by_partner_id($auth['user_id'])]; Tygh::$app['view']->assign([ 'total_commissions' => fn_sd_affiliate_get_total_commissions($auth['user_id']), 'max_amount' => $max_amount, 'last_payouts' => $last_payouts, 'partner' => $partner_data, 'partners' => $partners, 'affiliate_plans' => fn_sd_affiliate_get_plans_list() ]); } } if ($mode == 'become_super_affiliate') { if (!empty($_REQUEST['user_id'])) { $partner_id = db_get_field('SELECT partner_id FROM ?:users WHERE user_id = ?i', $_REQUEST['user_id']); fn_sd_affiliate_become_affiliate($_REQUEST['user_id'], $partner_id); } return [CONTROLLER_STATUS_OK, 'affiliate_plans.list']; } elseif ($mode == 'widget') { if (!empty($auth['user_id']) && $auth['user_type'] == AffiliateUserTypes::PARTNER) { $http_url = fn_get_storefront_url('http') . '?aff_id=' . $auth['user_id']; $https_url = fn_get_storefront_url('https') . '?aff_id=' . $auth['user_id']; $layouts = fn_sd_affiliate_get_layouts_for_affiliates(); Tygh::$app['view']->assign([ 'widget_http_url' => urlencode($http_url), 'widget_https_url' => urlencode($https_url), 'layouts' => $layouts ]); } else { return [CONTROLLER_STATUS_REDIRECT, fn_url()]; } } 